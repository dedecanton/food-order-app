{"ast":null,"code":"var _jsxFileName = \"/home/dede/Documents/programacao/food-order-app/src/store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      {\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItems;\n\n        if (existingCartItem) {\n          const updatedItem = { ...existingCartItem,\n            amount: existingCartItem.amount + action.item.amount\n          };\n          updatedItems = [...state.items];\n          updatedItems[existingCartItemIndex] = updatedItem;\n        } else {\n          updatedItems = state.items.concat(action.item);\n        }\n\n        const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        return {\n          items: updatedItems,\n          totalAmount: updateTotalAmount\n        };\n      }\n\n    case \"REMOVE\":\n      {\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n        const existingItem = state.items[existingCartItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n\n        if (existingItem.amount === 1) {\n          updatedItems = state.items.filter(item => item.id !== action.id);\n        } else {\n          const updatedItem = { ...existingItem,\n            amount: existingItem.amount - 1\n          };\n          updatedItems = [...state.items];\n          updatedItems[existingCartItemIndex] = updatedItem;\n        }\n\n        return {\n          items: updatedItems,\n          totalAmount: updatedTotalAmount\n        };\n      }\n\n    case 'CLEAR':\n      return defaultCartState;\n\n    default:\n      break;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/dede/Documents/programacao/food-order-app/src/store/CartProvider.jsx"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","updateTotalAmount","price","existingItem","updatedTotalAmount","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\": {\n      const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.item.id\n      );\n      const existingCartItem = state.items[existingCartItemIndex];\n\n      let updatedItems;\n      if (existingCartItem) {\n        const updatedItem = {\n          ...existingCartItem,\n          amount: existingCartItem.amount + action.item.amount,\n        };\n\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.items.concat(action.item);\n      }\n\n      const updateTotalAmount =\n        state.totalAmount + action.item.price * action.item.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updateTotalAmount,\n      };\n    }\n\n    case \"REMOVE\":\n      {\n        const existingCartItemIndex = state.items.findIndex(\n          (item) => item.id === action.id\n        );\n\n        const existingItem = state.items[existingCartItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n        if (existingItem.amount === 1) {\n          updatedItems = state.items.filter((item) => item.id !== action.id);\n        } else {\n          const updatedItem = {\n            ...existingItem,\n            amount: existingItem.amount - 1,\n          };\n          updatedItems = [...state.items]\n          updatedItems[existingCartItemIndex] = updatedItem;\n        }\n\n        return {\n          items: updatedItems,\n          totalAmount: updatedTotalAmount,\n        };\n      }\n    case 'CLEAR':\n      return defaultCartState;\n    default:\n      break;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}