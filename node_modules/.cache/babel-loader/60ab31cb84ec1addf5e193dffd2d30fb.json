{"ast":null,"code":"var _jsxFileName = \"/home/dede/Documents/programacao/food-order-app/src/store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      const updatedItems = state.items.concat(action.item);\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      const existingCartItem = state.items[exist];\n      const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updateTotalAmount\n      };\n\n    case 'REMOVE':\n      break;\n\n    default:\n      break;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/dede/Documents/programacao/food-order-app/src/store/CartProvider.jsx"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","existingCartItemIndex","findIndex","id","existingCartItem","exist","updateTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,YAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AAEA,YAAMC,qBAAqB,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CAAsBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EAAtD,CAA9B;AACA,YAAMC,gBAAgB,GAAGT,KAAK,CAACH,KAAN,CAAYa,KAAZ,CAAzB;AACA,YAAMC,iBAAiB,GAAGX,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYO,KAAZ,GAAoBX,MAAM,CAACI,IAAP,CAAYQ,MAA9E;AACA,aAAM;AACFhB,QAAAA,KAAK,EAAEM,YADL;AAEFL,QAAAA,WAAW,EAAEa;AAFX,OAAN;;AAIJ,SAAK,QAAL;AACI;;AAEJ;AACI;AAfR;;AAkBA,SAAOf,gBAAP;AACH,CArBD;;AAuBA,MAAMkB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMsB,oBAAoB,GAAIb,IAAD,IAAU;AACrCY,IAAAA,kBAAkB,CAAC;AACjBf,MAAAA,IAAI,EAAE,KADW;AAEjBG,MAAAA,IAAI,EAAEA;AAFW,KAAD,CAAlB;AAID,GALD;;AAOA,QAAMc,yBAAyB,GAAIX,EAAD,IAAQ;AACtCS,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,QAAP;AAAiBM,MAAAA,EAAE,EAACA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMY,WAAW,GAAG;AAClBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADC;AAElBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFL;AAGlBuB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;GAAMT,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n\n    switch (action.type) {\n        case 'ADD':\n            const updatedItems = state.items.concat(action.item);\n\n            const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id)\n            const existingCartItem = state.items[exist]\n            const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount\n            return{\n                items: updatedItems,\n                totalAmount: updateTotalAmount\n            }\n        case 'REMOVE':\n            break;\n    \n        default:\n            break;\n    }\n    \n    return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n      dispatchCartAction({type: 'REMOVE', id:id})\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}